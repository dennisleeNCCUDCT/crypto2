{"ast":null,"code":"var _jsxFileName = \"/Users/lipeichen/Downloads/Hardhat_ReactJS_Tutorial-main/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\"; // Import ABI Code to interact with smart contract\n\nimport Greeter from \"./artifacts/contracts/Greeter.sol/Greeter.json\";\nimport \"./App.css\"; // The contract address\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst greeterAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\nfunction App() {\n  _s();\n\n  // Property Variables\n  const [message, setMessage] = useState(\"\");\n  const [currentGreeting, setCurrentGreeting] = useState(\"\"); // Helper Functions\n  // Requests access to the user's Meta Mask Account\n  // https://metamask.io/\n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n  } // Fetches the current value store in greeting\n\n\n  async function fetchGreeting() {\n    // If MetaMask exists\n    if (typeof window.ethereum !== \"undefined\") {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, provider);\n\n      try {\n        // Call Greeter.greet() and display current greeting in `console`\n\n        /* \n          function greet() public view returns (string memory) {\n            return greeting;\n          }\n        */\n        const data = await contract.greet();\n        console.log(\"data: \", data);\n        setCurrentGreeting(data);\n      } catch (error) {\n        console.log(\"Error: \", error);\n      }\n    }\n  } // Sets the greeting from input text box\n\n\n  async function setGreeting() {\n    if (!message) return; // If MetaMask exists\n\n    if (typeof window.ethereum !== \"undefined\") {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner(); // Create contract with signer\n\n      /*\n        function setGreeting(string memory _greeting) public {\n          console.log(\"Changing greeting from '%s' to '%s'\", greeting, _greeting);\n          greeting = _greeting;\n        } \n      */\n\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer);\n      const transaction = await contract.setGreeting(message);\n      setMessage(\"\");\n      await transaction.wait();\n      fetchGreeting();\n    }\n  } // Return\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Greeter.sol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Full stack dapp using ReactJS and Hardhat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchGreeting,\n          style: {\n            backgroundColor: \"green\"\n          },\n          children: \"Fetch Greeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: setGreeting,\n          style: {\n            backgroundColor: \"red\"\n          },\n          children: \"Set Greeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setMessage(e.target.value),\n        value: message,\n        placeholder: \"Set Greeting Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"greeting\",\n        children: [\"Greeting: \", currentGreeting]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"iIPWR00UeGGfOE8JBPEUETFj70g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lipeichen/Downloads/Hardhat_ReactJS_Tutorial-main/src/App.js"],"names":["useState","ethers","Greeter","greeterAddress","App","message","setMessage","currentGreeting","setCurrentGreeting","requestAccount","window","ethereum","request","method","fetchGreeting","provider","providers","Web3Provider","contract","Contract","abi","data","greet","console","log","error","setGreeting","signer","getSigner","transaction","wait","backgroundColor","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { ethers } from \"ethers\";\n// Import ABI Code to interact with smart contract\nimport Greeter from \"./artifacts/contracts/Greeter.sol/Greeter.json\";\nimport \"./App.css\";\n\n// The contract address\nconst greeterAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\nfunction App() {\n  // Property Variables\n\n  const [message, setMessage] = useState(\"\");\n  const [currentGreeting, setCurrentGreeting] = useState(\"\");\n\n  // Helper Functions\n\n  // Requests access to the user's Meta Mask Account\n  // https://metamask.io/\n  async function requestAccount() {\n    await window.ethereum.request({ method: \"eth_requestAccounts\" });\n  }\n\n  // Fetches the current value store in greeting\n  async function fetchGreeting() {\n    // If MetaMask exists\n    if (typeof window.ethereum !== \"undefined\") {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(\n        greeterAddress,\n        Greeter.abi,\n        provider\n      );\n      try {\n        // Call Greeter.greet() and display current greeting in `console`\n        /* \n          function greet() public view returns (string memory) {\n            return greeting;\n          }\n        */\n        const data = await contract.greet();\n        console.log(\"data: \", data);\n        setCurrentGreeting(data);\n      } catch (error) {\n        console.log(\"Error: \", error);\n      }\n    }\n  }\n\n  // Sets the greeting from input text box\n  async function setGreeting() {\n    if (!message) return;\n\n    // If MetaMask exists\n    if (typeof window.ethereum !== \"undefined\") {\n      await requestAccount();\n\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      // Create contract with signer\n      /*\n        function setGreeting(string memory _greeting) public {\n          console.log(\"Changing greeting from '%s' to '%s'\", greeting, _greeting);\n          greeting = _greeting;\n        } \n      */\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer);\n      const transaction = await contract.setGreeting(message);\n\n      setMessage(\"\");\n      await transaction.wait();\n      fetchGreeting();\n    }\n  }\n\n  // Return\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        {/* DESCRIPTION  */}\n        <div className=\"description\">\n          <h1>Greeter.sol</h1>\n          <h3>Full stack dapp using ReactJS and Hardhat</h3>\n        </div>\n        {/* BUTTONS - Fetch and Set */}\n        <div className=\"custom-buttons\">\n          <button onClick={fetchGreeting} style={{ backgroundColor: \"green\" }}>\n            Fetch Greeting\n          </button>\n          <button onClick={setGreeting} style={{ backgroundColor: \"red\" }}>\n            Set Greeting\n          </button>\n        </div>\n        {/* INPUT TEXT - String  */}\n        <input\n          onChange={(e) => setMessage(e.target.value)}\n          value={message}\n          placeholder=\"Set Greeting Message\"\n        />\n\n        {/* Current Value stored on Blockchain */}\n        <h2 className=\"greeting\">Greeting: {currentGreeting}</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}